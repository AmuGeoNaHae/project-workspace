<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.webproject.mapper.TicketMapper">

	<select id="getMemberTickets" resultType="MypageTicketDTO">
		
	SELECT 
	    DISTINCT ticket.booking_date, ticket.booking_time, count_ticket.booking_total_qty,
	    p.performance_code, p.performance_name, p.poster,
	    payment_code_fk, pay.payment_date, pay.total_price, ticket.advance_ticket_state
	FROM advance_tickets ticket
	INNER JOIN
	(SELECT payment_code_fk, COUNT(payment_code_fk) as booking_total_qty FROM advance_tickets GROUP BY payment_code_fk) count_ticket USING(payment_code_fk)
	INNER JOIN performance p ON ticket.performance_code = p.performance_code
	INNER JOIN payments pay ON payment_code_fk = pay.payment_code
	WHERE ticket.booker_code = #{booker_code} AND advance_ticket_state = 'Y'
	ORDER BY ticket.booking_date DESC
		
	</select>
	
	<select id="getTicketDetail" resultType="MypageTicketDetailDTO">
		SELECT 
			DISTINCT
		    t.booking_date,
		    t.booking_time,
		    per.performance_name,
		    per.poster,
		    per.place,
		    pay.payment_code,
		    pay.payment_date,
		    pay.total_price
		FROM advance_tickets t
		INNER JOIN payments pay ON t.payment_code_fk = pay.payment_code
		INNER JOIN performance per ON t.performance_code = per.performance_code
		WHERE payment_code_fk = #{payment_code} AND advance_ticket_state = 'Y'
	</select>
	
	<select id="getTicketOptionQty" resultType="TicketOptionQtyDTO">
		SELECT booking_type, COUNT(booking_type) AS booking_qty
		FROM (
			SELECT * 
			FROM advance_tickets t
			INNER JOIN payments p ON t.payment_code_fk = p.payment_code
			INNER JOIN performance per ON t.performance_code = per.performance_code
			WHERE payment_code_fk = #{payment_code}
			) 
		GROUP BY booking_type
	</select>
	
	<select id="getTicketNum" resultType="TicketOptionDTO">
		SELECT advance_ticket_code, booking_type
		FROM advance_tickets
		WHERE payment_code_fk = #{payment_code}
	</select>
	
	<update id="updateRefundTicketState">
		UPDATE advance_tickets 
		SET advance_tickets.advance_ticket_state = 'N' 
		WHERE payment_code_fk = #{payment_code}
	</update>
	
	<select id="getRefundTickets" resultType="MypageRefundDTO">
		SELECT 
	   		 DISTINCT
		    ticket.booking_date, ticket.booking_time, count_ticket.booking_total_qty,
		    p.performance_name, p.poster,
		    r.refund_code, r.refund_date, r.refund_status,
		    pay.total_price
		FROM advance_tickets ticket
			INNER JOIN
			(SELECT payment_code_fk, COUNT(payment_code_fk) as booking_total_qty FROM advance_tickets GROUP BY payment_code_fk) count_ticket USING(payment_code_fk)
			INNER JOIN performance p ON ticket.performance_code = p.performance_code
			INNER JOIN payments pay ON payment_code_fk = pay.payment_code
			INNER JOIN refund r ON payment_code_fk = r.payment_code
		WHERE ticket.booker_code = #{booker_code} AND advance_ticket_state = 'N'
		ORDER BY r.refund_date DESC
	</select>

</mapper>